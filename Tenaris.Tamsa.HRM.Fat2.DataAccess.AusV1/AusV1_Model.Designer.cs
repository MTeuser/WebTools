//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_GroupPolicy_ApplicationCommand", "ApplicationCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.ApplicationCommand), "GroupPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.GroupPolicy), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_GroupPolicy_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Group), "GroupPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.GroupPolicy), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_UserGroup_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Group), "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.UserGroup), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_UserGroup_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.User), "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.UserGroup), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_ApplicationCommand_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Application), "ApplicationCommand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.ApplicationCommand), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_Production_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Tool), "Production", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Production), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_ToolDetail_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Property), "ToolDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.ToolDetail), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Supplier), "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Tool), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_ToolDetail_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Tool), "ToolDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.ToolDetail), true)]
[assembly: EdmRelationshipAttribute("AusV1_Model", "FK_Type", "Type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Type), "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1.Tool), true)]

#endregion

namespace Tenaris.Tamsa.HRM.Fat2.DataAccess.AusV1
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AusV1_Entities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AusV1_Entities1 object using the connection string found in the 'AusV1_Entities1' section of the application configuration file.
        /// </summary>
        public AusV1_Entities1() : base("name=AusV1_Entities1", "AusV1_Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AusV1_Entities1 object.
        /// </summary>
        public AusV1_Entities1(string connectionString) : base(connectionString, "AusV1_Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AusV1_Entities1 object.
        /// </summary>
        public AusV1_Entities1(EntityConnection connection) : base(connection, "AusV1_Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeatHistory> HeatHistories
        {
            get
            {
                if ((_HeatHistories == null))
                {
                    _HeatHistories = base.CreateObjectSet<HeatHistory>("HeatHistories");
                }
                return _HeatHistories;
            }
        }
        private ObjectSet<HeatHistory> _HeatHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationCommand> ApplicationCommands
        {
            get
            {
                if ((_ApplicationCommands == null))
                {
                    _ApplicationCommands = base.CreateObjectSet<ApplicationCommand>("ApplicationCommands");
                }
                return _ApplicationCommands;
            }
        }
        private ObjectSet<ApplicationCommand> _ApplicationCommands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupPolicy> GroupPolicies
        {
            get
            {
                if ((_GroupPolicies == null))
                {
                    _GroupPolicies = base.CreateObjectSet<GroupPolicy>("GroupPolicies");
                }
                return _GroupPolicies;
            }
        }
        private ObjectSet<GroupPolicy> _GroupPolicies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Production> Productions
        {
            get
            {
                if ((_Productions == null))
                {
                    _Productions = base.CreateObjectSet<Production>("Productions");
                }
                return _Productions;
            }
        }
        private ObjectSet<Production> _Productions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tool> Tools
        {
            get
            {
                if ((_Tools == null))
                {
                    _Tools = base.CreateObjectSet<Tool>("Tools");
                }
                return _Tools;
            }
        }
        private ObjectSet<Tool> _Tools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolDetail> ToolDetails
        {
            get
            {
                if ((_ToolDetails == null))
                {
                    _ToolDetails = base.CreateObjectSet<ToolDetail>("ToolDetails");
                }
                return _ToolDetails;
            }
        }
        private ObjectSet<ToolDetail> _ToolDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Type> Types
        {
            get
            {
                if ((_Types == null))
                {
                    _Types = base.CreateObjectSet<Type>("Types");
                }
                return _Types;
            }
        }
        private ObjectSet<Type> _Types;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeatHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeatHistories(HeatHistory heatHistory)
        {
            base.AddObject("HeatHistories", heatHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationCommands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationCommands(ApplicationCommand applicationCommand)
        {
            base.AddObject("ApplicationCommands", applicationCommand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupPolicies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupPolicies(GroupPolicy groupPolicy)
        {
            base.AddObject("GroupPolicies", groupPolicy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Productions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductions(Production production)
        {
            base.AddObject("Productions", production);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTools(Tool tool)
        {
            base.AddObject("Tools", tool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolDetails(ToolDetail toolDetail)
        {
            base.AddObject("ToolDetails", toolDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypes(Type type)
        {
            base.AddObject("Types", type);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="idApplication">Initial value of the idApplication property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isManager">Initial value of the IsManager property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static Application CreateApplication(global::System.Int32 idApplication, global::System.String code, global::System.String name, global::System.Boolean isManager, global::System.String fileName, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            Application application = new Application();
            application.idApplication = idApplication;
            application.Code = code;
            application.Name = name;
            application.IsManager = isManager;
            application.FileName = fileName;
            application.Active = active;
            application.InsDateTime = insDateTime;
            application.UpdDateTime = updDateTime;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idApplication
        {
            get
            {
                return _idApplication;
            }
            set
            {
                if (_idApplication != value)
                {
                    OnidApplicationChanging(value);
                    ReportPropertyChanging("idApplication");
                    _idApplication = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idApplication");
                    OnidApplicationChanged();
                }
            }
        }
        private global::System.Int32 _idApplication;
        partial void OnidApplicationChanging(global::System.Int32 value);
        partial void OnidApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManager
        {
            get
            {
                return _IsManager;
            }
            set
            {
                OnIsManagerChanging(value);
                ReportPropertyChanging("IsManager");
                _IsManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManager");
                OnIsManagerChanged();
            }
        }
        private global::System.Boolean _IsManager;
        partial void OnIsManagerChanging(global::System.Boolean value);
        partial void OnIsManagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ApplicationCommand_Application", "ApplicationCommand")]
        public EntityCollection<ApplicationCommand> ApplicationCommands
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationCommand>("AusV1_Model.FK_ApplicationCommand_Application", "ApplicationCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationCommand>("AusV1_Model.FK_ApplicationCommand_Application", "ApplicationCommand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="ApplicationCommand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationCommand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationCommand object.
        /// </summary>
        /// <param name="idApplicationCommand">Initial value of the idApplicationCommand property.</param>
        /// <param name="idApplication">Initial value of the idApplication property.</param>
        /// <param name="command">Initial value of the Command property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static ApplicationCommand CreateApplicationCommand(global::System.Int32 idApplicationCommand, global::System.Int32 idApplication, global::System.String command, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            ApplicationCommand applicationCommand = new ApplicationCommand();
            applicationCommand.idApplicationCommand = idApplicationCommand;
            applicationCommand.idApplication = idApplication;
            applicationCommand.Command = command;
            applicationCommand.InsDateTime = insDateTime;
            applicationCommand.UpdDateTime = updDateTime;
            return applicationCommand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idApplicationCommand
        {
            get
            {
                return _idApplicationCommand;
            }
            set
            {
                if (_idApplicationCommand != value)
                {
                    OnidApplicationCommandChanging(value);
                    ReportPropertyChanging("idApplicationCommand");
                    _idApplicationCommand = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idApplicationCommand");
                    OnidApplicationCommandChanged();
                }
            }
        }
        private global::System.Int32 _idApplicationCommand;
        partial void OnidApplicationCommandChanging(global::System.Int32 value);
        partial void OnidApplicationCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idApplication
        {
            get
            {
                return _idApplication;
            }
            set
            {
                OnidApplicationChanging(value);
                ReportPropertyChanging("idApplication");
                _idApplication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idApplication");
                OnidApplicationChanged();
            }
        }
        private global::System.Int32 _idApplication;
        partial void OnidApplicationChanging(global::System.Int32 value);
        partial void OnidApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Command
        {
            get
            {
                return _Command;
            }
            set
            {
                OnCommandChanging(value);
                ReportPropertyChanging("Command");
                _Command = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Command");
                OnCommandChanged();
            }
        }
        private global::System.String _Command;
        partial void OnCommandChanging(global::System.String value);
        partial void OnCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_GroupPolicy_ApplicationCommand", "GroupPolicy")]
        public EntityCollection<GroupPolicy> GroupPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupPolicy>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "GroupPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupPolicy>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "GroupPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ApplicationCommand_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("AusV1_Model.FK_ApplicationCommand_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("AusV1_Model.FK_ApplicationCommand_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("AusV1_Model.FK_ApplicationCommand_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("AusV1_Model.FK_ApplicationCommand_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="idGroup">Initial value of the idGroup property.</param>
        /// <param name="idZone">Initial value of the idZone property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static Group CreateGroup(global::System.Int32 idGroup, global::System.Int32 idZone, global::System.String code, global::System.String name, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            Group group = new Group();
            group.idGroup = idGroup;
            group.idZone = idZone;
            group.Code = code;
            group.Name = name;
            group.Active = active;
            group.InsDateTime = insDateTime;
            group.UpdDateTime = updDateTime;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGroup
        {
            get
            {
                return _idGroup;
            }
            set
            {
                if (_idGroup != value)
                {
                    OnidGroupChanging(value);
                    ReportPropertyChanging("idGroup");
                    _idGroup = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idGroup");
                    OnidGroupChanged();
                }
            }
        }
        private global::System.Int32 _idGroup;
        partial void OnidGroupChanging(global::System.Int32 value);
        partial void OnidGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idZone
        {
            get
            {
                return _idZone;
            }
            set
            {
                OnidZoneChanging(value);
                ReportPropertyChanging("idZone");
                _idZone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idZone");
                OnidZoneChanged();
            }
        }
        private global::System.Int32 _idZone;
        partial void OnidZoneChanging(global::System.Int32 value);
        partial void OnidZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_GroupPolicy_Group", "GroupPolicy")]
        public EntityCollection<GroupPolicy> GroupPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupPolicy>("AusV1_Model.FK_GroupPolicy_Group", "GroupPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupPolicy>("AusV1_Model.FK_GroupPolicy_Group", "GroupPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_UserGroup_Group", "UserGroup")]
        public EntityCollection<UserGroup> UserGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroup>("AusV1_Model.FK_UserGroup_Group", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroup>("AusV1_Model.FK_UserGroup_Group", "UserGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="GroupPolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupPolicy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupPolicy object.
        /// </summary>
        /// <param name="idGroupPolicy">Initial value of the idGroupPolicy property.</param>
        /// <param name="idGroup">Initial value of the idGroup property.</param>
        /// <param name="idApplicationCommand">Initial value of the idApplicationCommand property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static GroupPolicy CreateGroupPolicy(global::System.Int32 idGroupPolicy, global::System.Int32 idGroup, global::System.Int32 idApplicationCommand, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            GroupPolicy groupPolicy = new GroupPolicy();
            groupPolicy.idGroupPolicy = idGroupPolicy;
            groupPolicy.idGroup = idGroup;
            groupPolicy.idApplicationCommand = idApplicationCommand;
            groupPolicy.Active = active;
            groupPolicy.InsDateTime = insDateTime;
            groupPolicy.UpdDateTime = updDateTime;
            return groupPolicy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGroupPolicy
        {
            get
            {
                return _idGroupPolicy;
            }
            set
            {
                if (_idGroupPolicy != value)
                {
                    OnidGroupPolicyChanging(value);
                    ReportPropertyChanging("idGroupPolicy");
                    _idGroupPolicy = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idGroupPolicy");
                    OnidGroupPolicyChanged();
                }
            }
        }
        private global::System.Int32 _idGroupPolicy;
        partial void OnidGroupPolicyChanging(global::System.Int32 value);
        partial void OnidGroupPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGroup
        {
            get
            {
                return _idGroup;
            }
            set
            {
                OnidGroupChanging(value);
                ReportPropertyChanging("idGroup");
                _idGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idGroup");
                OnidGroupChanged();
            }
        }
        private global::System.Int32 _idGroup;
        partial void OnidGroupChanging(global::System.Int32 value);
        partial void OnidGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idApplicationCommand
        {
            get
            {
                return _idApplicationCommand;
            }
            set
            {
                OnidApplicationCommandChanging(value);
                ReportPropertyChanging("idApplicationCommand");
                _idApplicationCommand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idApplicationCommand");
                OnidApplicationCommandChanged();
            }
        }
        private global::System.Int32 _idApplicationCommand;
        partial void OnidApplicationCommandChanging(global::System.Int32 value);
        partial void OnidApplicationCommandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_GroupPolicy_ApplicationCommand", "ApplicationCommand")]
        public ApplicationCommand ApplicationCommand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationCommand>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "ApplicationCommand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationCommand>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "ApplicationCommand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationCommand> ApplicationCommandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationCommand>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "ApplicationCommand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationCommand>("AusV1_Model.FK_GroupPolicy_ApplicationCommand", "ApplicationCommand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_GroupPolicy_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_GroupPolicy_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_GroupPolicy_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_GroupPolicy_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("AusV1_Model.FK_GroupPolicy_Group", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="HeatHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeatHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeatHistory object.
        /// </summary>
        /// <param name="idHeatHistory">Initial value of the idHeatHistory property.</param>
        /// <param name="steelCode">Initial value of the SteelCode property.</param>
        /// <param name="heatNumber">Initial value of the HeatNumber property.</param>
        /// <param name="stencilColor">Initial value of the StencilColor property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        public static HeatHistory CreateHeatHistory(global::System.Int32 idHeatHistory, global::System.String steelCode, global::System.Int32 heatNumber, global::System.String stencilColor, global::System.DateTimeOffset insDateTime)
        {
            HeatHistory heatHistory = new HeatHistory();
            heatHistory.idHeatHistory = idHeatHistory;
            heatHistory.SteelCode = steelCode;
            heatHistory.HeatNumber = heatNumber;
            heatHistory.StencilColor = stencilColor;
            heatHistory.InsDateTime = insDateTime;
            return heatHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHeatHistory
        {
            get
            {
                return _idHeatHistory;
            }
            set
            {
                if (_idHeatHistory != value)
                {
                    OnidHeatHistoryChanging(value);
                    ReportPropertyChanging("idHeatHistory");
                    _idHeatHistory = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idHeatHistory");
                    OnidHeatHistoryChanged();
                }
            }
        }
        private global::System.Int32 _idHeatHistory;
        partial void OnidHeatHistoryChanging(global::System.Int32 value);
        partial void OnidHeatHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SteelCode
        {
            get
            {
                return _SteelCode;
            }
            set
            {
                OnSteelCodeChanging(value);
                ReportPropertyChanging("SteelCode");
                _SteelCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SteelCode");
                OnSteelCodeChanged();
            }
        }
        private global::System.String _SteelCode;
        partial void OnSteelCodeChanging(global::System.String value);
        partial void OnSteelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HeatNumber
        {
            get
            {
                return _HeatNumber;
            }
            set
            {
                OnHeatNumberChanging(value);
                ReportPropertyChanging("HeatNumber");
                _HeatNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatNumber");
                OnHeatNumberChanged();
            }
        }
        private global::System.Int32 _HeatNumber;
        partial void OnHeatNumberChanging(global::System.Int32 value);
        partial void OnHeatNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StencilColor
        {
            get
            {
                return _StencilColor;
            }
            set
            {
                OnStencilColorChanging(value);
                ReportPropertyChanging("StencilColor");
                _StencilColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StencilColor");
                OnStencilColorChanged();
            }
        }
        private global::System.String _StencilColor;
        partial void OnStencilColorChanging(global::System.String value);
        partial void OnStencilColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Production")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Production object.
        /// </summary>
        /// <param name="idProduction">Initial value of the idProduction property.</param>
        /// <param name="idHeatHistory">Initial value of the idHeatHistory property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static Production CreateProduction(global::System.Int32 idProduction, global::System.Int32 idHeatHistory, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            Production production = new Production();
            production.idProduction = idProduction;
            production.idHeatHistory = idHeatHistory;
            production.Active = active;
            production.InsDateTime = insDateTime;
            production.UpdDateTime = updDateTime;
            return production;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProduction
        {
            get
            {
                return _idProduction;
            }
            set
            {
                if (_idProduction != value)
                {
                    OnidProductionChanging(value);
                    ReportPropertyChanging("idProduction");
                    _idProduction = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProduction");
                    OnidProductionChanged();
                }
            }
        }
        private global::System.Int32 _idProduction;
        partial void OnidProductionChanging(global::System.Int32 value);
        partial void OnidProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idTool
        {
            get
            {
                return _idTool;
            }
            set
            {
                OnidToolChanging(value);
                ReportPropertyChanging("idTool");
                _idTool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idTool");
                OnidToolChanged();
            }
        }
        private Nullable<global::System.Int32> _idTool;
        partial void OnidToolChanging(Nullable<global::System.Int32> value);
        partial void OnidToolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Double> _weight;
        partial void OnweightChanging(Nullable<global::System.Double> value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pieces
        {
            get
            {
                return _pieces;
            }
            set
            {
                OnpiecesChanging(value);
                ReportPropertyChanging("pieces");
                _pieces = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pieces");
                OnpiecesChanged();
            }
        }
        private Nullable<global::System.Int32> _pieces;
        partial void OnpiecesChanging(Nullable<global::System.Int32> value);
        partial void OnpiecesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idHeatHistory
        {
            get
            {
                return _idHeatHistory;
            }
            set
            {
                OnidHeatHistoryChanging(value);
                ReportPropertyChanging("idHeatHistory");
                _idHeatHistory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idHeatHistory");
                OnidHeatHistoryChanged();
            }
        }
        private global::System.Int32 _idHeatHistory;
        partial void OnidHeatHistoryChanging(global::System.Int32 value);
        partial void OnidHeatHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Production_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_Production_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_Production_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_Production_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("AusV1_Model.FK_Production_Tool", "Tool", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="idProperty">Initial value of the idProperty property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Property CreateProperty(global::System.Int32 idProperty, global::System.String name)
        {
            Property property = new Property();
            property.idProperty = idProperty;
            property.name = name;
            return property;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProperty
        {
            get
            {
                return _idProperty;
            }
            set
            {
                if (_idProperty != value)
                {
                    OnidPropertyChanging(value);
                    ReportPropertyChanging("idProperty");
                    _idProperty = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProperty");
                    OnidPropertyChanged();
                }
            }
        }
        private global::System.Int32 _idProperty;
        partial void OnidPropertyChanging(global::System.Int32 value);
        partial void OnidPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dataType
        {
            get
            {
                return _dataType;
            }
            set
            {
                OndataTypeChanging(value);
                ReportPropertyChanging("dataType");
                _dataType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dataType");
                OndataTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _dataType;
        partial void OndataTypeChanging(Nullable<global::System.Int32> value);
        partial void OndataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ToolDetail_Property", "ToolDetail")]
        public EntityCollection<ToolDetail> ToolDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolDetail>("AusV1_Model.FK_ToolDetail_Property", "ToolDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolDetail>("AusV1_Model.FK_ToolDetail_Property", "ToolDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="idSupplier">Initial value of the idSupplier property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static Supplier CreateSupplier(global::System.Int32 idSupplier, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            Supplier supplier = new Supplier();
            supplier.idSupplier = idSupplier;
            supplier.Active = active;
            supplier.InsDateTime = insDateTime;
            supplier.UpdDateTime = updDateTime;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSupplier
        {
            get
            {
                return _idSupplier;
            }
            set
            {
                if (_idSupplier != value)
                {
                    OnidSupplierChanging(value);
                    ReportPropertyChanging("idSupplier");
                    _idSupplier = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idSupplier");
                    OnidSupplierChanged();
                }
            }
        }
        private global::System.Int32 _idSupplier;
        partial void OnidSupplierChanging(global::System.Int32 value);
        partial void OnidSupplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Supplier", "Tool")]
        public EntityCollection<Tool> Tools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tool>("AusV1_Model.FK_Supplier", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tool>("AusV1_Model.FK_Supplier", "Tool", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Tool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tool object.
        /// </summary>
        /// <param name="idTool">Initial value of the idTool property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static Tool CreateTool(global::System.Int32 idTool, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            Tool tool = new Tool();
            tool.idTool = idTool;
            tool.Active = active;
            tool.InsDateTime = insDateTime;
            tool.UpdDateTime = updDateTime;
            return tool;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTool
        {
            get
            {
                return _idTool;
            }
            set
            {
                if (_idTool != value)
                {
                    OnidToolChanging(value);
                    ReportPropertyChanging("idTool");
                    _idTool = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idTool");
                    OnidToolChanged();
                }
            }
        }
        private global::System.Int32 _idTool;
        partial void OnidToolChanging(global::System.Int32 value);
        partial void OnidToolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idSuplier
        {
            get
            {
                return _idSuplier;
            }
            set
            {
                OnidSuplierChanging(value);
                ReportPropertyChanging("idSuplier");
                _idSuplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idSuplier");
                OnidSuplierChanged();
            }
        }
        private Nullable<global::System.Int32> _idSuplier;
        partial void OnidSuplierChanging(Nullable<global::System.Int32> value);
        partial void OnidSuplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idType
        {
            get
            {
                return _idType;
            }
            set
            {
                OnidTypeChanging(value);
                ReportPropertyChanging("idType");
                _idType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idType");
                OnidTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _idType;
        partial void OnidTypeChanging(Nullable<global::System.Int32> value);
        partial void OnidTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idUser
        {
            get
            {
                return _idUser;
            }
            set
            {
                OnidUserChanging(value);
                ReportPropertyChanging("idUser");
                _idUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idUser");
                OnidUserChanged();
            }
        }
        private Nullable<global::System.Int32> _idUser;
        partial void OnidUserChanging(Nullable<global::System.Int32> value);
        partial void OnidUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Production_Tool", "Production")]
        public EntityCollection<Production> Productions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Production>("AusV1_Model.FK_Production_Tool", "Production");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Production>("AusV1_Model.FK_Production_Tool", "Production", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AusV1_Model.FK_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AusV1_Model.FK_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AusV1_Model.FK_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("AusV1_Model.FK_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ToolDetail_Tool", "ToolDetail")]
        public EntityCollection<ToolDetail> ToolDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolDetail>("AusV1_Model.FK_ToolDetail_Tool", "ToolDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolDetail>("AusV1_Model.FK_ToolDetail_Tool", "ToolDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Type", "Type")]
        public Type Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("AusV1_Model.FK_Type", "Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("AusV1_Model.FK_Type", "Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Type> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("AusV1_Model.FK_Type", "Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Type>("AusV1_Model.FK_Type", "Type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="ToolDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolDetail object.
        /// </summary>
        /// <param name="idToolDetail">Initial value of the idToolDetail property.</param>
        public static ToolDetail CreateToolDetail(global::System.Int32 idToolDetail)
        {
            ToolDetail toolDetail = new ToolDetail();
            toolDetail.idToolDetail = idToolDetail;
            return toolDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idToolDetail
        {
            get
            {
                return _idToolDetail;
            }
            set
            {
                if (_idToolDetail != value)
                {
                    OnidToolDetailChanging(value);
                    ReportPropertyChanging("idToolDetail");
                    _idToolDetail = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idToolDetail");
                    OnidToolDetailChanged();
                }
            }
        }
        private global::System.Int32 _idToolDetail;
        partial void OnidToolDetailChanging(global::System.Int32 value);
        partial void OnidToolDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idProperty
        {
            get
            {
                return _idProperty;
            }
            set
            {
                OnidPropertyChanging(value);
                ReportPropertyChanging("idProperty");
                _idProperty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idProperty");
                OnidPropertyChanged();
            }
        }
        private Nullable<global::System.Int32> _idProperty;
        partial void OnidPropertyChanging(Nullable<global::System.Int32> value);
        partial void OnidPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> idTool
        {
            get
            {
                return _idTool;
            }
            set
            {
                OnidToolChanging(value);
                ReportPropertyChanging("idTool");
                _idTool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idTool");
                OnidToolChanged();
            }
        }
        private Nullable<global::System.Int32> _idTool;
        partial void OnidToolChanging(Nullable<global::System.Int32> value);
        partial void OnidToolChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ToolDetail_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("AusV1_Model.FK_ToolDetail_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("AusV1_Model.FK_ToolDetail_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("AusV1_Model.FK_ToolDetail_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("AusV1_Model.FK_ToolDetail_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_ToolDetail_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_ToolDetail_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_ToolDetail_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AusV1_Model.FK_ToolDetail_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("AusV1_Model.FK_ToolDetail_Tool", "Tool", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Type object.
        /// </summary>
        /// <param name="idType">Initial value of the idType property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Type CreateType(global::System.Int32 idType, global::System.String code, global::System.String name)
        {
            Type type = new Type();
            type.idType = idType;
            type.Code = code;
            type.Name = name;
            return type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idType
        {
            get
            {
                return _idType;
            }
            set
            {
                if (_idType != value)
                {
                    OnidTypeChanging(value);
                    ReportPropertyChanging("idType");
                    _idType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idType");
                    OnidTypeChanged();
                }
            }
        }
        private global::System.Int32 _idType;
        partial void OnidTypeChanging(global::System.Int32 value);
        partial void OnidTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_Type", "Tool")]
        public EntityCollection<Tool> Tools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tool>("AusV1_Model.FK_Type", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tool>("AusV1_Model.FK_Type", "Tool", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="idUser">Initial value of the idUser property.</param>
        /// <param name="identification">Initial value of the Identification property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static User CreateUser(global::System.Int32 idUser, global::System.String identification, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            User user = new User();
            user.idUser = idUser;
            user.Identification = identification;
            user.Active = active;
            user.InsDateTime = insDateTime;
            user.UpdDateTime = updDateTime;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUser
        {
            get
            {
                return _idUser;
            }
            set
            {
                if (_idUser != value)
                {
                    OnidUserChanging(value);
                    ReportPropertyChanging("idUser");
                    _idUser = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUser");
                    OnidUserChanged();
                }
            }
        }
        private global::System.Int32 _idUser;
        partial void OnidUserChanging(global::System.Int32 value);
        partial void OnidUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Identification
        {
            get
            {
                return _Identification;
            }
            set
            {
                OnIdentificationChanging(value);
                ReportPropertyChanging("Identification");
                _Identification = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Identification");
                OnIdentificationChanged();
            }
        }
        private global::System.String _Identification;
        partial void OnIdentificationChanging(global::System.String value);
        partial void OnIdentificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_UserGroup_User", "UserGroup")]
        public EntityCollection<UserGroup> UserGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroup>("AusV1_Model.FK_UserGroup_User", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroup>("AusV1_Model.FK_UserGroup_User", "UserGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AusV1_Model", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="idUserGroup">Initial value of the idUserGroup property.</param>
        /// <param name="idUser">Initial value of the idUser property.</param>
        /// <param name="idGroup">Initial value of the idGroup property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="insDateTime">Initial value of the InsDateTime property.</param>
        /// <param name="updDateTime">Initial value of the UpdDateTime property.</param>
        public static UserGroup CreateUserGroup(global::System.Int32 idUserGroup, global::System.Int32 idUser, global::System.Int32 idGroup, global::System.Boolean active, global::System.DateTimeOffset insDateTime, global::System.DateTimeOffset updDateTime)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.idUserGroup = idUserGroup;
            userGroup.idUser = idUser;
            userGroup.idGroup = idGroup;
            userGroup.Active = active;
            userGroup.InsDateTime = insDateTime;
            userGroup.UpdDateTime = updDateTime;
            return userGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUserGroup
        {
            get
            {
                return _idUserGroup;
            }
            set
            {
                if (_idUserGroup != value)
                {
                    OnidUserGroupChanging(value);
                    ReportPropertyChanging("idUserGroup");
                    _idUserGroup = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUserGroup");
                    OnidUserGroupChanged();
                }
            }
        }
        private global::System.Int32 _idUserGroup;
        partial void OnidUserGroupChanging(global::System.Int32 value);
        partial void OnidUserGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUser
        {
            get
            {
                return _idUser;
            }
            set
            {
                OnidUserChanging(value);
                ReportPropertyChanging("idUser");
                _idUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idUser");
                OnidUserChanged();
            }
        }
        private global::System.Int32 _idUser;
        partial void OnidUserChanging(global::System.Int32 value);
        partial void OnidUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGroup
        {
            get
            {
                return _idGroup;
            }
            set
            {
                OnidGroupChanging(value);
                ReportPropertyChanging("idGroup");
                _idGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idGroup");
                OnidGroupChanged();
            }
        }
        private global::System.Int32 _idGroup;
        partial void OnidGroupChanging(global::System.Int32 value);
        partial void OnidGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> ExpirationDateTime
        {
            get
            {
                return _ExpirationDateTime;
            }
            set
            {
                OnExpirationDateTimeChanging(value);
                ReportPropertyChanging("ExpirationDateTime");
                _ExpirationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDateTime");
                OnExpirationDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _ExpirationDateTime;
        partial void OnExpirationDateTimeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnExpirationDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset InsDateTime
        {
            get
            {
                return _InsDateTime;
            }
            set
            {
                OnInsDateTimeChanging(value);
                ReportPropertyChanging("InsDateTime");
                _InsDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsDateTime");
                OnInsDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _InsDateTime;
        partial void OnInsDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnInsDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset UpdDateTime
        {
            get
            {
                return _UpdDateTime;
            }
            set
            {
                OnUpdDateTimeChanging(value);
                ReportPropertyChanging("UpdDateTime");
                _UpdDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdDateTime");
                OnUpdDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _UpdDateTime;
        partial void OnUpdDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnUpdDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_UserGroup_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_UserGroup_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_UserGroup_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AusV1_Model.FK_UserGroup_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("AusV1_Model.FK_UserGroup_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AusV1_Model", "FK_UserGroup_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AusV1_Model.FK_UserGroup_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AusV1_Model.FK_UserGroup_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AusV1_Model.FK_UserGroup_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AusV1_Model.FK_UserGroup_User", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
